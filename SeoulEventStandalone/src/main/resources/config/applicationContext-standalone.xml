<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:p="http://www.springframework.org/schema/p"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:jee="http://www.springframework.org/schema/jee"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
        	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd" default-autowire="byName">

	<context:component-scan base-package="*" />
	<context:annotation-config />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- database properties -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- property name="location" value="classpath:db.properties"/ -->
		<property name="location" value="classpath:/config/db.properties" />
	</bean>

	<!-- data source -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="initialSize" value="2"/>
        <property name="maxActive" value="3"/>
        <property name="maxIdle" value="1"/>
        <property name="maxWait" value="30000"/> 
        <property name="logAbandoned" value="true"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="60"/>
    	<property name="validationQuery" value="SELECT 1 FROM DUAL"/>
    	<property name="testOnBorrow" value="true"/>
    	<property name="testOnReturn" value="false"/>
    	<property name="testWhileIdle" value="true"/>
    	<property name="timeBetweenEvictionRunsMillis" value="60000"/>
	</bean>
	
	<!-- mybatis config -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/config/MapperConfig.xml" />
		<!-- <property name="configLocation" value="WEB-INF/classes/MapperConfig.xml"/> -->
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<bean id="ReservationDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.hasfun.seoulevent.standalone.dao.ReservationDAO" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="ReservationService" class="com.hasfun.seoulevent.standalone.service.ReservationServiceImpl" />
</beans>
